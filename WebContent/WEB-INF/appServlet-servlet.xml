<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
	
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-4.0.xsd">
					

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<task:annotation-driven />
	
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/sitemap.xml" location="/" />
    
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl" >
		<beans:property name="host" value="email-smtp.us-west-2.amazonaws.com"/>
        <beans:property name="port" value="465"/>
        <beans:property name="username" value="AKIAIL47YUJW745465JA"/>
        <beans:property name="password" value="Alp8oRTu+9KiO92HFJMMPZUUR2eUtW+bcArxdc4LTKac"/>
		<beans:property name="javaMailProperties">
            <beans:props>
                <!-- Use SMTP transport protocol -->
                <beans:prop key="mail.transport.protocol">smtps</beans:prop>
                <!-- Use SMTP-AUTH to authenticate to SMTP server -->
                <beans:prop key="mail.smtp.auth">true</beans:prop>
                <!-- Use TLS to encrypt communication with SMTP server -->
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
                <beans:prop key="mail.debug">false</beans:prop>
            </beans:props>
        </beans:property>
	</beans:bean>
	
	
	
	<!-- 
	<jee:jndi-lookup id="mailSession" jndi-name="java:comp/env/mail/Session" resource-ref="true"/>
	 -->
	 <!-- 
	<beans:bean id="mailSession" class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="java:comp/env/mail/Session"/>
    </beans:bean>
    
    <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <beans:property name="session" ref="mailSession"/>
    </beans:bean>
	 -->
	 
	  <!-- 
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl" >
		 <beans:property  name="mailSession" ref="mailSession"/>
	</beans:bean>
	  -->
	 
	<beans:bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <beans:property name="velocityProperties">
            <beans:value>
                resource.loader=class
                class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
            </beans:value>
        </beans:property>
    </beans:bean>

 	
 	<beans:bean id="mainMailService" class="com.doorit.spring.service.EmailNotificationServiceImpl">
  	<beans:property name="mailSender" ref="mailSender"/>
  	<beans:property name="velocityEngine" ref="velocityEngine"/>
</beans:bean>
  
	  
	 
	 <!--  NeurGuru production data base configration      -->    
 	 
 	<!--             
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://aa1cv3lgm2m8c7y.cqzcucr39rg2.us-west-2.rds.amazonaws.com:3306/ebdb" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="nearguru" />
	</beans:bean>
	 
	    -->
	   	 <!-- End -->   
	   
 	  <!--              
	   <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/testschema" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="" />
		</beans:bean>  
        -->        
           
	   
 
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<beans:property name="url"
			value="jdbc:hsqldb:file:/db/testdb22" />
		<beans:property name="username" value="SA" />
		<beans:property name="password" value="" />
	</beans:bean>
     
   <!-- 
   <beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="java:comp/env/jdbc/nearguru"/>
    </beans:bean>
     -->
   
	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.doorit.spring.model.Product</beans:value>
				<beans:value>com.doorit.spring.model.Question</beans:value>
				<beans:value>com.doorit.spring.model.Option</beans:value>
				<beans:value>com.doorit.spring.model.User</beans:value>
				<beans:value>com.doorit.spring.model.RequestAnswer</beans:value>
				<beans:value>com.doorit.spring.model.ProsProfile</beans:value>
				<beans:value>com.doorit.spring.model.UserProsProfile</beans:value>
				<beans:value>com.doorit.spring.model.RequestService</beans:value>
				<beans:value>com.doorit.spring.model.Quotes</beans:value>
				<beans:value>com.doorit.spring.model.ProductGroup</beans:value>
				<beans:value>com.doorit.spring.model.Feedback</beans:value>
				<beans:value>com.doorit.spring.model.Notification</beans:value>
				<beans:value>com.doorit.spring.model.Image</beans:value>
				<beans:value>com.doorit.spring.model.UserRole</beans:value>
				<beans:value>com.doorit.spring.model.Document</beans:value>
				
			</beans:list>
		</beans:property>
		
		
		
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop> 
				
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
				
				
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!-- file upload   -->
	
	<beans:bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
 
         <!-- setting maximum upload size -->
        <beans:property name="maxUploadSize" value="10000000" />
 
    </beans:bean>
 
	
	
	<!-- DAO -->
	
	<beans:bean id="navigationWrapper" class="com.doorit.spring.model.NavigationWrapper">
		
	</beans:bean>
	
	
	<beans:bean id="adminDAO" class="com.doorit.spring.dao.AdminDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	
	<beans:bean id="customerDAO" class="com.doorit.spring.dao.CustomerDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	
	 <beans:bean id="prosDAO" class="com.doorit.spring.dao.ProsDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean> 
	
	<beans:bean id="documentDAO" class="com.doorit.spring.dao.DocumentDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean> 
	
	<beans:bean id="reportDAO" class="com.doorit.spring.dao.ReportDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean> 
	
	<beans:bean id="messageService" class="com.doorit.spring.service.MessageServiceImpl">
	</beans:bean>
	
	
	<!-- end of DAO -->
	
	<!-- Service -->
	
	<beans:bean id="documentService" class="com.doorit.spring.service.DocumentServiceImpl">
		<beans:property name="documentDAO" ref="documentDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="adminService" class="com.doorit.spring.service.AdminServiceImpl">
		<beans:property name="adminDAO" ref="adminDAO"></beans:property>
	</beans:bean>
	
	
	<beans:bean id="customerService" class="com.doorit.spring.service.CustomerServiceImpl">
		<beans:property name="customerDAO" ref="customerDAO"></beans:property>
	</beans:bean>
	
	 <beans:bean id="prosService" class="com.doorit.spring.service.ProsServiceImpl">
		<beans:property name="prosDAO" ref="prosDAO"></beans:property>
	</beans:bean> 
	
	 <beans:bean id="reportService" class="com.doorit.spring.service.ReportServiceImpl">
		<beans:property name="reportDAO" ref="reportDAO"></beans:property>
	</beans:bean> 
	 
	
	
	<!-- end of Service -->
	
	<context:component-scan base-package="com.doorit.spring" />
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="successWrapper" class="com.doorit.spring.model.WrapSuccessError"></beans:bean>

</beans:beans>
